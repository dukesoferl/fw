#! /bin/sh

#---------------------------------------------------------------------
#                            check-for-tag                            
# 
# Given a tag (--tag), determine if the tag exists or not.
#---------------------------------------------------------------------

#---------------------------------------------------------------------
#                           chicken and egg                           
#---------------------------------------------------------------------

test -f "${FW_ROOT}/share/fw/sh/fw-find.sh" && fws="${FW_ROOT}/share/fw/sh/fw-find.sh"
test -f "fw/sh/fw-find.sh" && fws="fw/sh/fw-find.sh"
test -f "fw.local/sh/fw-find.sh" && fws="fw.local/sh/fw-find.sh"
test ! -z "$fws" || {
  echo "revision/git/check-for-tag: fatal: can't locate fw-find.sh" 1>&2
  exit 1
}

. "$fws"

#---------------------------------------------------------------------
#                              routines                               
#---------------------------------------------------------------------

fw_source "revision/git/check-for-tag" "sh/fatal.sh"
fw_source "revision/git/check-for-tag" "sh/parse-args.sh"
fw_source "revision/git/check-for-tag" "sh/validate-args.sh"

check_revisions() {
  test "$1" == "$2" || {
    echo "revision/git/check-for-tag: fatal: tag already exists"
    exit 1
  }
}

#---------------------------------------------------------------------
#                                main                                 
#---------------------------------------------------------------------

parse_args "revision/git/check-for-tag" "$@"

validate_args "revision/git/check-for-tag" "tag" ""

eval `fw-exec "template/$template/load-config"`

prog="`which git 2>/dev/null`"

test -z "$prog" && {
  echo "revision/git/check-for-tag: fatal: git not installed" 1>&2
  exit 1
}

git fetch --tags

tag_rev=$(git show-ref --tags $tag | awk '{print $1}')

local_tag=$(git tag -l $tag)
test -z "$local_tag" || {
  local_rev=$(git show-ref --tags $local_tag | awk '{print $1}')
  test "$tag" == "$local_tag" && {
    check_revisions "$tag_rev" "$local_rev"
  }
}

remote_tag=$(git ls-remote --tags origin refs/tags/$tag | awk '{print $1}')
test -z "$remote_tag" || {
  remote_rev=$(echo $remote_tag | awk '{print $1}')
  test "$tag" == "$remote_tag" && {
    check_revisions "$tag_rev" "$remote_rev"
  }
}

exit 0
