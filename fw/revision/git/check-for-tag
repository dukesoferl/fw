#! /bin/sh

#---------------------------------------------------------------------
#                            check-for-tag                            
# 
# Given a tag (--tag), determine if the tag exists or not.
#---------------------------------------------------------------------

#---------------------------------------------------------------------
#                           chicken and egg                           
#---------------------------------------------------------------------

test -f "${FW_ROOT}/share/fw/sh/fw-find.sh" && fws="${FW_ROOT}/share/fw/sh/fw-find.sh"
test -f "fw/sh/fw-find.sh" && fws="fw/sh/fw-find.sh"
test -f "fw.local/sh/fw-find.sh" && fws="fw.local/sh/fw-find.sh"
test ! -z "$fws" || {
  echo "revision/git/check-for-tag: fatal: can't locate fw-find.sh" 1>&2
  exit 1
}

. "$fws"

#---------------------------------------------------------------------
#                              routines                               
#---------------------------------------------------------------------

fw_source "revision/git/check-for-tag" "sh/fatal.sh"
fw_source "revision/git/check-for-tag" "sh/parse-args.sh"
fw_source "revision/git/check-for-tag" "sh/validate-args.sh"

#---------------------------------------------------------------------
#                                main                                 
#---------------------------------------------------------------------

parse_args "revision/git/check-for-tag" "$@"

validate_args "revision/git/check-for-tag" "tag" ""

eval `fw-exec "template/$template/load-config"`

prog="`which git 2>/dev/null`"

test -z "$prog" && {
  echo "revision/git/check-for-tag: fatal: git not installed" 1>&2
  exit 1
}

# Technically, this compares the hashes of the tags, not where they're pointing.
# If you want that, just add ^{} to the end of $tag.
remote_tag=$(git ls-remote --exit-code --tags origin $tag)
if [[ $? -eq 0 ]]; then
    existing_revision=$(echo $remote_tag | awk '{print $1}')  # Get remote tag hash
    incoming_revision=$(git rev-parse $tag)  # Get local tag hash
    if [[ "$existing_revision" != "$incoming_revision" ]]; then
	echo "$tag exists but revisions do not match: $existing_revision (existing) : $incoming_revision (incoming)."
	exit 1
    fi
    git tag -m "tag '$tag' created by fw-revision-git" -a $tag
fi

exit 0
